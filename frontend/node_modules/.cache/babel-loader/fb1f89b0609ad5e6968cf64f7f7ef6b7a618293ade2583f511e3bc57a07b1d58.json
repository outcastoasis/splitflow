{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jascha\\\\Documents\\\\VS Code\\\\Schulden-Manager\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Dashboard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const currentUser = \"Jascha\";\n  const navigate = useNavigate();\n  const [summary, setSummary] = useState([]);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [recentDebts, setRecentDebts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const resDebts = await fetch(`/api/debts?user=${currentUser}`);\n      const data = await resDebts.json();\n      const grouped = {};\n      data.forEach(debt => {\n        if (debt.status !== \"open\") return;\n        const other = debt.creditor === currentUser ? debt.debtor : debt.creditor;\n        const amount = debt.creditor === currentUser ? debt.amount - (debt.paidAmount || 0) : -(debt.amount - (debt.paidAmount || 0));\n        if (!grouped[other]) grouped[other] = 0;\n        grouped[other] += amount;\n      });\n      const summaryArray = Object.entries(grouped).map(([name, total]) => ({\n        name,\n        total\n      }));\n      setSummary(summaryArray);\n      const sortedDebts = data.sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 5);\n      setRecentDebts(sortedDebts);\n      const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\n      const subs = await resSubs.json();\n      setSubscriptions(subs);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Splitflow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"September 2025\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"August 2025\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), \"Nur offene Schulden\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uD83D\\uDD0D Suche nach Name oder Abo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDC65 Teilnehmer\\xFCbersicht\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: summary.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: entry.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"participant-status\",\n            children: entry.total > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Offene Schulden: \", entry.total.toFixed(2), \" CHF\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge status-offen\",\n                children: \"offen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Alles bezahlt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge status-bezahlt\",\n                children: \"bezahlt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/dashboard/${entry.name}`),\n            children: \"Details anzeigen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), entry.total > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/dashboard/${entry.name}`),\n            children: \"Zahlung erfassen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, entry.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCE6 Eigene Abos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: subscriptions.map(sub => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [sub.name, \" \\u2013 \", sub.amount, \" CHF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: sub.participants.map(p => `${p.name} (${p.share} CHF)`).join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/edit-subscription/${sub._id}`),\n            children: \"Abo bearbeiten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/preview-subscription/${sub._id}`),\n            children: \"Vorschau anzeigen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, sub._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCCB Schulden (letzte Eintr\\xE4ge)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: recentDebts.map((debt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entry-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(debt.date).toLocaleDateString(\"de-CH\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [debt.debtor, \" \\u2192 \", debt.creditor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [debt.amount.toFixed(2), \" CHF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: debt.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), debt.status === \"open\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/dashboard/${debt.creditor === currentUser ? debt.debtor : debt.creditor}`),\n            children: \"Zahlung erfassen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-badge status-bezahlt\",\n            children: \"bezahlt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"/qTS8uZhM3QM2mbIbe+APyloK38=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","currentUser","navigate","summary","setSummary","subscriptions","setSubscriptions","recentDebts","setRecentDebts","fetchData","resDebts","fetch","data","json","grouped","forEach","debt","status","other","creditor","debtor","amount","paidAmount","summaryArray","Object","entries","map","name","total","sortedDebts","sort","a","b","Date","date","slice","resSubs","subs","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","defaultChecked","placeholder","entry","toFixed","onClick","sub","participants","p","share","join","_id","idx","toLocaleDateString","description","_c","$RefreshReg$"],"sources":["C:/Users/Jascha/Documents/VS Code/Schulden-Manager/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const currentUser = \"Jascha\";\r\n  const navigate = useNavigate();\r\n\r\n  const [summary, setSummary] = useState([]);\r\n  const [subscriptions, setSubscriptions] = useState([]);\r\n  const [recentDebts, setRecentDebts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resDebts = await fetch(`/api/debts?user=${currentUser}`);\r\n      const data = await resDebts.json();\r\n\r\n      const grouped = {};\r\n      data.forEach((debt) => {\r\n        if (debt.status !== \"open\") return;\r\n        const other =\r\n          debt.creditor === currentUser ? debt.debtor : debt.creditor;\r\n        const amount =\r\n          debt.creditor === currentUser\r\n            ? debt.amount - (debt.paidAmount || 0)\r\n            : -(debt.amount - (debt.paidAmount || 0));\r\n        if (!grouped[other]) grouped[other] = 0;\r\n        grouped[other] += amount;\r\n      });\r\n\r\n      const summaryArray = Object.entries(grouped).map(([name, total]) => ({\r\n        name,\r\n        total,\r\n      }));\r\n      setSummary(summaryArray);\r\n\r\n      const sortedDebts = data\r\n        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n        .slice(0, 5);\r\n      setRecentDebts(sortedDebts);\r\n\r\n      const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\r\n      const subs = await resSubs.json();\r\n      setSubscriptions(subs);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Splitflow</h1>\r\n      </header>\r\n\r\n      <section className=\"filters\">\r\n        <select>\r\n          <option>September 2025</option>\r\n          <option>August 2025</option>\r\n        </select>\r\n        <label>\r\n          <input type=\"checkbox\" defaultChecked />\r\n          Nur offene Schulden\r\n        </label>\r\n        <input type=\"text\" placeholder=\"🔍 Suche nach Name oder Abo\" />\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <h2>👥 Teilnehmerübersicht</h2>\r\n        <div className=\"cards\">\r\n          {summary.map((entry) => (\r\n            <div className=\"card\" key={entry.name}>\r\n              <h3>{entry.name}</h3>\r\n              <div className=\"participant-status\">\r\n                {entry.total > 0 ? (\r\n                  <>\r\n                    <span>Offene Schulden: {entry.total.toFixed(2)} CHF</span>\r\n                    <span className=\"status-badge status-offen\">offen</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span>Alles bezahlt</span>\r\n                    <span className=\"status-badge status-bezahlt\">bezahlt</span>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <button onClick={() => navigate(`/dashboard/${entry.name}`)}>\r\n                Details anzeigen\r\n              </button>\r\n              {entry.total > 0 && (\r\n                <button onClick={() => navigate(`/dashboard/${entry.name}`)}>\r\n                  Zahlung erfassen\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <h2>📦 Eigene Abos</h2>\r\n        <div className=\"cards\">\r\n          {subscriptions.map((sub) => (\r\n            <div className=\"card\" key={sub._id}>\r\n              <h3>\r\n                {sub.name} – {sub.amount} CHF\r\n              </h3>\r\n              <p>\r\n                {sub.participants\r\n                  .map((p) => `${p.name} (${p.share} CHF)`)\r\n                  .join(\", \")}\r\n              </p>\r\n              <button onClick={() => navigate(`/edit-subscription/${sub._id}`)}>\r\n                Abo bearbeiten\r\n              </button>\r\n              <button\r\n                onClick={() => navigate(`/preview-subscription/${sub._id}`)}\r\n              >\r\n                Vorschau anzeigen\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <h2>📋 Schulden (letzte Einträge)</h2>\r\n        <div className=\"card\">\r\n          {recentDebts.map((debt, idx) => (\r\n            <div className=\"entry-row\" key={idx}>\r\n              <span>{new Date(debt.date).toLocaleDateString(\"de-CH\")}</span>\r\n              <span>\r\n                {debt.debtor} → {debt.creditor}\r\n              </span>\r\n              <span>{debt.amount.toFixed(2)} CHF</span>\r\n              <span>{debt.description}</span>\r\n              {debt.status === \"open\" ? (\r\n                <button\r\n                  onClick={() =>\r\n                    navigate(\r\n                      `/dashboard/${\r\n                        debt.creditor === currentUser\r\n                          ? debt.debtor\r\n                          : debt.creditor\r\n                      }`\r\n                    )\r\n                  }\r\n                >\r\n                  Zahlung erfassen\r\n                </button>\r\n              ) : (\r\n                <span className=\"status-badge status-bezahlt\">bezahlt</span>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}