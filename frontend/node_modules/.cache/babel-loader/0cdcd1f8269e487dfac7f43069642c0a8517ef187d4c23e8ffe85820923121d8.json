{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jascha\\\\Documents\\\\VS Code\\\\Schulden-Manager\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const currentUser = \"Jascha\";\n  const [debts, setDebts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchDebts = async () => {\n      try {\n        const res = await fetch(`/api/debts?user=${currentUser}`);\n        const data = await res.json();\n        setDebts(data);\n      } catch (err) {\n        console.error(\"Fehler beim Laden der Schulden:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDebts();\n  }, []);\n  const balances = {};\n  debts.forEach(debt => {\n    const {\n      creditor,\n      debtor,\n      amount,\n      status\n    } = debt;\n    if (status === \"paid\") return;\n\n    // Bestimme, wer die andere Person ist\n    const otherPerson = creditor === currentUser ? debtor : creditor;\n    const value = creditor === currentUser ? amount : -amount;\n\n    // Berechne Saldo\n    if (!balances[otherPerson]) balances[otherPerson] = 0;\n    balances[otherPerson] += value;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deine Schulden\\xFCbersicht\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lade Daten...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : Object.keys(balances).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Keine offenen Schulden.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(balances).map(([person, total]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [total > 0 && `${person} schuldet dir ${total.toFixed(2)} CHF`, total < 0 && `Du schuldest ${person} ${Math.abs(total).toFixed(2)} CHF`, total === 0 && `${person}: ausgeglichen`]\n      }, person, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"yREiJ6j8DlG1hhJzPmns2J07IaY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","currentUser","debts","setDebts","loading","setLoading","fetchDebts","res","fetch","data","json","err","console","error","balances","forEach","debt","creditor","debtor","amount","status","otherPerson","value","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","person","total","toFixed","Math","abs","_c","$RefreshReg$"],"sources":["C:/Users/Jascha/Documents/VS Code/Schulden-Manager/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Dashboard() {\r\n  const currentUser = \"Jascha\";\r\n  const [debts, setDebts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDebts = async () => {\r\n      try {\r\n        const res = await fetch(`/api/debts?user=${currentUser}`);\r\n        const data = await res.json();\r\n        setDebts(data);\r\n      } catch (err) {\r\n        console.error(\"Fehler beim Laden der Schulden:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDebts();\r\n  }, []);\r\n\r\n  const balances = {};\r\n\r\n  debts.forEach((debt) => {\r\n    const { creditor, debtor, amount, status } = debt;\r\n    if (status === \"paid\") return;\r\n\r\n    // Bestimme, wer die andere Person ist\r\n    const otherPerson = creditor === currentUser ? debtor : creditor;\r\n    const value = creditor === currentUser ? amount : -amount;\r\n\r\n    // Berechne Saldo\r\n    if (!balances[otherPerson]) balances[otherPerson] = 0;\r\n    balances[otherPerson] += value;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deine Schulden√ºbersicht</h2>\r\n      {loading ? (\r\n        <p>Lade Daten...</p>\r\n      ) : Object.keys(balances).length === 0 ? (\r\n        <p>Keine offenen Schulden.</p>\r\n      ) : (\r\n        <ul>\r\n          {Object.entries(balances).map(([person, total]) => (\r\n            <li key={person}>\r\n              {total > 0 && `${person} schuldet dir ${total.toFixed(2)} CHF`}\r\n              {total < 0 && `Du schuldest ${person} ${Math.abs(total).toFixed(2)} CHF`}\r\n              {total === 0 && `${person}: ausgeglichen`}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}