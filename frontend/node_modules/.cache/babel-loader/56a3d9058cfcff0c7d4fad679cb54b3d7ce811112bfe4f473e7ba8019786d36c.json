{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jascha\\\\Documents\\\\VS Code\\\\Schulden-Manager\\\\frontend\\\\src\\\\pages\\\\Subscriptions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subscriptions() {\n  _s();\n  const currentUser = \"Jascha\";\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [participants, setParticipants] = useState([{\n    name: \"\",\n    share: \"\"\n  }]);\n  const fetchSubscriptions = async () => {\n    const res = await fetch(`/api/subscriptions?user=${currentUser}`);\n    const data = await res.json();\n    setSubscriptions(data);\n  };\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n  const handleAddParticipant = () => {\n    setParticipants([...participants, {\n      name: \"\",\n      share: \"\"\n    }]);\n  };\n  const handleParticipantChange = (index, field, value) => {\n    const updated = [...participants];\n    updated[index][field] = value;\n    setParticipants(updated);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      name,\n      amount: parseFloat(amount),\n      startDate,\n      createdBy: currentUser,\n      participants: participants.map(p => ({\n        name: p.name,\n        share: parseFloat(p.share)\n      }))\n    };\n    await fetch(\"/api/subscriptions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n\n    // Reset & reload\n    setName(\"\");\n    setAmount(\"\");\n    setStartDate(\"\");\n    setParticipants([{\n      name: \"\",\n      share: \"\"\n    }]);\n    fetchSubscriptions();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Abo erstellen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Abo-Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Gesamtbetrag\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Teilnehmeranteile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), participants.map((p, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: p.name,\n          onChange: e => handleParticipantChange(index, \"name\", e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Anteil\",\n          value: p.share,\n          onChange: e => handleParticipantChange(index, \"share\", e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddParticipant,\n        children: \"\\u2795 Weitere Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Abo speichern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Meine Abos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subscriptions.map(sub => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sub.name, \" \\u2013 \", sub.amount, \"\\u20AC \\u2013 Start:\", \" \", new Date(sub.startDate).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sub.participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.name, \": \", p.share, \"\\u20AC\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, sub._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Schulden generieren\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async e => {\n        e.preventDefault();\n        const month = prompt(\"Für welchen Monat? (Format: YYYY-MM)\");\n        if (!month) return;\n        const response = await fetch(\"/api/generate-debts\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: currentUser,\n            month: `${month}-01` // z. B. \"2025-09-01\"\n          })\n        });\n        const result = await response.json();\n        alert(result.message || \"Fertig\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u2795 Schulden f\\xFCr Monat generieren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Subscriptions, \"J2SJqXnA4CETKQXqGzX/XaIkm48=\");\n_c = Subscriptions;\nexport default Subscriptions;\nvar _c;\n$RefreshReg$(_c, \"Subscriptions\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Subscriptions","_s","currentUser","subscriptions","setSubscriptions","name","setName","amount","setAmount","startDate","setStartDate","participants","setParticipants","share","fetchSubscriptions","res","fetch","data","json","handleAddParticipant","handleParticipantChange","index","field","value","updated","handleSubmit","e","preventDefault","payload","parseFloat","createdBy","map","p","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","required","onClick","sub","Date","toLocaleDateString","i","_id","month","prompt","response","user","result","alert","message","_c","$RefreshReg$"],"sources":["C:/Users/Jascha/Documents/VS Code/Schulden-Manager/frontend/src/pages/Subscriptions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Subscriptions() {\r\n  const currentUser = \"Jascha\";\r\n  const [subscriptions, setSubscriptions] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [participants, setParticipants] = useState([{ name: \"\", share: \"\" }]);\r\n\r\n  const fetchSubscriptions = async () => {\r\n    const res = await fetch(`/api/subscriptions?user=${currentUser}`);\r\n    const data = await res.json();\r\n    setSubscriptions(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSubscriptions();\r\n  }, []);\r\n\r\n  const handleAddParticipant = () => {\r\n    setParticipants([...participants, { name: \"\", share: \"\" }]);\r\n  };\r\n\r\n  const handleParticipantChange = (index, field, value) => {\r\n    const updated = [...participants];\r\n    updated[index][field] = value;\r\n    setParticipants(updated);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      name,\r\n      amount: parseFloat(amount),\r\n      startDate,\r\n      createdBy: currentUser,\r\n      participants: participants.map((p) => ({\r\n        name: p.name,\r\n        share: parseFloat(p.share),\r\n      })),\r\n    };\r\n\r\n    await fetch(\"/api/subscriptions\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    // Reset & reload\r\n    setName(\"\");\r\n    setAmount(\"\");\r\n    setStartDate(\"\");\r\n    setParticipants([{ name: \"\", share: \"\" }]);\r\n    fetchSubscriptions();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Abo erstellen</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Abo-Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Gesamtbetrag\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <h4>Teilnehmeranteile</h4>\r\n        {participants.map((p, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={p.name}\r\n              onChange={(e) =>\r\n                handleParticipantChange(index, \"name\", e.target.value)\r\n              }\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Anteil\"\r\n              value={p.share}\r\n              onChange={(e) =>\r\n                handleParticipantChange(index, \"share\", e.target.value)\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleAddParticipant}>\r\n          ➕ Weitere Person\r\n        </button>\r\n        <button type=\"submit\">Abo speichern</button>\r\n      </form>\r\n\r\n      <h3>Meine Abos</h3>\r\n      <ul>\r\n        {subscriptions.map((sub) => (\r\n          <li key={sub._id}>\r\n            {sub.name} – {sub.amount}€ – Start:{\" \"}\r\n            {new Date(sub.startDate).toLocaleDateString()}\r\n            <ul>\r\n              {sub.participants.map((p, i) => (\r\n                <li key={i}>\r\n                  {p.name}: {p.share}€\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h3>Schulden generieren</h3>\r\n      <form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          const month = prompt(\"Für welchen Monat? (Format: YYYY-MM)\");\r\n          if (!month) return;\r\n\r\n          const response = await fetch(\"/api/generate-debts\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              user: currentUser,\r\n              month: `${month}-01`, // z. B. \"2025-09-01\"\r\n            }),\r\n          });\r\n\r\n          const result = await response.json();\r\n          alert(result.message || \"Fertig\");\r\n        }}\r\n      >\r\n        <button type=\"submit\">➕ Schulden für Monat generieren</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subscriptions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}