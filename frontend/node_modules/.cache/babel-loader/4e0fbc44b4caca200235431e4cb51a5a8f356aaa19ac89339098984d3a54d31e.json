{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jascha\\\\Documents\\\\VS Code\\\\Schulden-Manager\\\\frontend\\\\src\\\\pages\\\\Add.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subscriptions() {\n  _s();\n  const currentUser = \"Jascha\";\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [availableParticipants, setAvailableParticipants] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [participants, setParticipants] = useState([]);\n  const [oneCreditor, setOneCreditor] = useState(\"\");\n  const [oneDebtor, setOneDebtor] = useState(\"\");\n  const [oneAmount, setOneAmount] = useState(\"\");\n  const [oneDescription, setOneDescription] = useState(\"\");\n  const [oneDate, setOneDate] = useState(\"\");\n\n  // Daten laden: Abos + Teilnehmer\n  useEffect(() => {\n    const fetchData = async () => {\n      const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\n      const subs = await resSubs.json();\n      setSubscriptions(subs);\n      const resParts = await fetch(`/api/participants?user=${currentUser}`);\n      const parts = await resParts.json();\n      setAvailableParticipants(parts);\n    };\n    fetchData();\n  }, []);\n\n  // Teilnehmer hinzufügen\n  const handleAddParticipant = () => {\n    const usedNames = participants.map(p => p.name);\n    const unused = availableParticipants.find(p => !usedNames.includes(p.name));\n    if (!unused) return;\n    setParticipants([...participants, {\n      name: unused.name,\n      share: 0,\n      isCustom: false\n    }]);\n  };\n\n  // Teilnehmer löschen\n  const handleRemoveParticipant = index => {\n    const updated = [...participants];\n    updated.splice(index, 1);\n    setParticipants(updated);\n  };\n\n  // Teilnehmerfelder ändern\n  const handleParticipantChange = (index, field, value) => {\n    const updated = [...participants];\n    updated[index][field] = value;\n    if (field === \"share\") updated[index].isCustom = true;\n    setParticipants(updated);\n  };\n\n  // Anteil zurücksetzen (z. B. per Doppelklick)\n  const resetShare = index => {\n    const updated = [...participants];\n    updated[index].isCustom = false;\n    updated[index].share = 0;\n    setParticipants(updated);\n  };\n\n  // Dynamische Anteilverteilung\n  useEffect(() => {\n    const total = parseFloat(amount);\n    if (!total || participants.length === 0) return;\n    const fixed = participants.filter(p => p.isCustom);\n    const dynamic = participants.filter(p => !p.isCustom);\n    const fixedSum = fixed.reduce((sum, p) => sum + parseFloat(p.share || 0), 0);\n    const remaining = total - fixedSum;\n    const perPerson = dynamic.length > 0 ? remaining / dynamic.length : 0;\n    const updated = participants.map(p => {\n      if (p.isCustom) return p;\n      return {\n        ...p,\n        share: perPerson.toFixed(2)\n      };\n    });\n\n    // Nur aktualisieren, wenn sich etwas ändert\n    const changed = participants.length !== updated.length || participants.some((p, i) => p.share !== updated[i].share || p.name !== updated[i].name);\n    if (changed) {\n      setParticipants(updated);\n    }\n  }, [amount, participants]);\n\n  // Abo absenden\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      name,\n      amount: parseFloat(amount),\n      startDate,\n      createdBy: currentUser,\n      participants: participants.map(p => ({\n        name: p.name,\n        share: parseFloat(p.share)\n      }))\n    };\n    await fetch(\"/api/subscriptions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n\n    // Reset + Neu laden\n    setName(\"\");\n    setAmount(\"\");\n    setStartDate(\"\");\n    setParticipants([]);\n    const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\n    const subs = await resSubs.json();\n    setSubscriptions(subs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Abo erstellen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Abo-Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Gesamtbetrag\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Teilnehmeranteile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), participants.map((p, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: p.name,\n          onChange: e => handleParticipantChange(index, \"name\", e.target.value),\n          children: availableParticipants.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.name,\n            disabled: participants.some((pp, i) => i !== index && pp.name === option.name),\n            children: option.name\n          }, option._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: p.share,\n          onChange: e => handleParticipantChange(index, \"share\", parseFloat(e.target.value)),\n          onDoubleClick: () => resetShare(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleRemoveParticipant(index),\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddParticipant,\n        children: \"\\u2795 Teilnehmer hinzuf\\xFCgen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u2705 Abo speichern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Meine Abos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subscriptions.map(sub => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sub.name, \" \\u2013 \", sub.amount, \"\\u20AC \\u2013 Start:\", \" \", new Date(sub.startDate).toLocaleDateString(\"de-CH\"), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sub.participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.name, \": \", p.share, \"\\u20AC\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, sub._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Einmalige Schuld erfassen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async e => {\n        e.preventDefault();\n        if (!oneCreditor || !oneDebtor || !oneAmount || !oneDate) {\n          alert(\"Bitte alle Felder ausfüllen.\");\n          return;\n        }\n        await fetch(\"/api/debts\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            creditor: oneCreditor,\n            debtor: oneDebtor,\n            amount: parseFloat(oneAmount),\n            description: oneDescription,\n            date: oneDate\n          })\n        });\n        alert(\"Schuld gespeichert!\");\n\n        // Zurücksetzen\n        setOneCreditor(\"\");\n        setOneDebtor(\"\");\n        setOneAmount(\"\");\n        setOneDescription(\"\");\n        setOneDate(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gl\\xE4ubiger:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: oneCreditor,\n          onChange: e => setOneCreditor(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- ausw\\xE4hlen --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), availableParticipants.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p.name,\n            children: p.name\n          }, p._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Schuldner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: oneDebtor,\n          onChange: e => setOneDebtor(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- ausw\\xE4hlen --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), availableParticipants.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p.name,\n            children: p.name\n          }, p._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Betrag:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: oneAmount,\n          onChange: e => setOneAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Beschreibung:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: oneDescription,\n          onChange: e => setOneDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Datum:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: oneDate,\n          onChange: e => setOneDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u2795 Einmalige Schuld erfassen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Subscriptions, \"UN4BNQhc113vklryZ5vidZFYnNk=\");\n_c = Subscriptions;\nexport default Subscriptions;\nvar _c;\n$RefreshReg$(_c, \"Subscriptions\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Subscriptions","_s","currentUser","subscriptions","setSubscriptions","availableParticipants","setAvailableParticipants","name","setName","amount","setAmount","startDate","setStartDate","participants","setParticipants","oneCreditor","setOneCreditor","oneDebtor","setOneDebtor","oneAmount","setOneAmount","oneDescription","setOneDescription","oneDate","setOneDate","fetchData","resSubs","fetch","subs","json","resParts","parts","handleAddParticipant","usedNames","map","p","unused","find","includes","share","isCustom","handleRemoveParticipant","index","updated","splice","handleParticipantChange","field","value","resetShare","total","parseFloat","length","fixed","filter","dynamic","fixedSum","reduce","sum","remaining","perPerson","toFixed","changed","some","i","handleSubmit","e","preventDefault","payload","createdBy","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","required","option","disabled","pp","_id","onDoubleClick","onClick","sub","Date","toLocaleDateString","alert","creditor","debtor","description","date","step","_c","$RefreshReg$"],"sources":["C:/Users/Jascha/Documents/VS Code/Schulden-Manager/frontend/src/pages/Add.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Subscriptions() {\r\n  const currentUser = \"Jascha\";\r\n\r\n  const [subscriptions, setSubscriptions] = useState([]);\r\n  const [availableParticipants, setAvailableParticipants] = useState([]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n  const [oneCreditor, setOneCreditor] = useState(\"\");\r\n  const [oneDebtor, setOneDebtor] = useState(\"\");\r\n  const [oneAmount, setOneAmount] = useState(\"\");\r\n  const [oneDescription, setOneDescription] = useState(\"\");\r\n  const [oneDate, setOneDate] = useState(\"\");\r\n\r\n  // Daten laden: Abos + Teilnehmer\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\r\n      const subs = await resSubs.json();\r\n      setSubscriptions(subs);\r\n\r\n      const resParts = await fetch(`/api/participants?user=${currentUser}`);\r\n      const parts = await resParts.json();\r\n      setAvailableParticipants(parts);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Teilnehmer hinzufügen\r\n  const handleAddParticipant = () => {\r\n    const usedNames = participants.map((p) => p.name);\r\n    const unused = availableParticipants.find(\r\n      (p) => !usedNames.includes(p.name)\r\n    );\r\n    if (!unused) return;\r\n    setParticipants([\r\n      ...participants,\r\n      { name: unused.name, share: 0, isCustom: false },\r\n    ]);\r\n  };\r\n\r\n  // Teilnehmer löschen\r\n  const handleRemoveParticipant = (index) => {\r\n    const updated = [...participants];\r\n    updated.splice(index, 1);\r\n    setParticipants(updated);\r\n  };\r\n\r\n  // Teilnehmerfelder ändern\r\n  const handleParticipantChange = (index, field, value) => {\r\n    const updated = [...participants];\r\n    updated[index][field] = value;\r\n    if (field === \"share\") updated[index].isCustom = true;\r\n    setParticipants(updated);\r\n  };\r\n\r\n  // Anteil zurücksetzen (z. B. per Doppelklick)\r\n  const resetShare = (index) => {\r\n    const updated = [...participants];\r\n    updated[index].isCustom = false;\r\n    updated[index].share = 0;\r\n    setParticipants(updated);\r\n  };\r\n\r\n  // Dynamische Anteilverteilung\r\n  useEffect(() => {\r\n    const total = parseFloat(amount);\r\n    if (!total || participants.length === 0) return;\r\n\r\n    const fixed = participants.filter((p) => p.isCustom);\r\n    const dynamic = participants.filter((p) => !p.isCustom);\r\n\r\n    const fixedSum = fixed.reduce(\r\n      (sum, p) => sum + parseFloat(p.share || 0),\r\n      0\r\n    );\r\n    const remaining = total - fixedSum;\r\n    const perPerson = dynamic.length > 0 ? remaining / dynamic.length : 0;\r\n\r\n    const updated = participants.map((p) => {\r\n      if (p.isCustom) return p;\r\n      return { ...p, share: perPerson.toFixed(2) };\r\n    });\r\n\r\n    // Nur aktualisieren, wenn sich etwas ändert\r\n    const changed =\r\n      participants.length !== updated.length ||\r\n      participants.some(\r\n        (p, i) => p.share !== updated[i].share || p.name !== updated[i].name\r\n      );\r\n\r\n    if (changed) {\r\n      setParticipants(updated);\r\n    }\r\n  }, [amount, participants]);\r\n\r\n  // Abo absenden\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      name,\r\n      amount: parseFloat(amount),\r\n      startDate,\r\n      createdBy: currentUser,\r\n      participants: participants.map((p) => ({\r\n        name: p.name,\r\n        share: parseFloat(p.share),\r\n      })),\r\n    };\r\n\r\n    await fetch(\"/api/subscriptions\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    // Reset + Neu laden\r\n    setName(\"\");\r\n    setAmount(\"\");\r\n    setStartDate(\"\");\r\n    setParticipants([]);\r\n    const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\r\n    const subs = await resSubs.json();\r\n    setSubscriptions(subs);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Abo erstellen</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Abo-Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Gesamtbetrag\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <h4>Teilnehmeranteile</h4>\r\n        {participants.map((p, index) => (\r\n          <div key={index}>\r\n            <select\r\n              value={p.name}\r\n              onChange={(e) =>\r\n                handleParticipantChange(index, \"name\", e.target.value)\r\n              }\r\n            >\r\n              {availableParticipants.map((option) => (\r\n                <option\r\n                  key={option._id}\r\n                  value={option.name}\r\n                  disabled={participants.some(\r\n                    (pp, i) => i !== index && pp.name === option.name\r\n                  )}\r\n                >\r\n                  {option.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              type=\"number\"\r\n              value={p.share}\r\n              onChange={(e) =>\r\n                handleParticipantChange(\r\n                  index,\r\n                  \"share\",\r\n                  parseFloat(e.target.value)\r\n                )\r\n              }\r\n              onDoubleClick={() => resetShare(index)}\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleRemoveParticipant(index)}\r\n            >\r\n              🗑️\r\n            </button>\r\n          </div>\r\n        ))}\r\n\r\n        <button type=\"button\" onClick={handleAddParticipant}>\r\n          ➕ Teilnehmer hinzufügen\r\n        </button>\r\n\r\n        <button type=\"submit\">✅ Abo speichern</button>\r\n      </form>\r\n\r\n      <h3>Meine Abos</h3>\r\n      <ul>\r\n        {subscriptions.map((sub) => (\r\n          <li key={sub._id}>\r\n            {sub.name} – {sub.amount}€ – Start:{\" \"}\r\n            {new Date(sub.startDate).toLocaleDateString(\"de-CH\")}\r\n            <ul>\r\n              {sub.participants.map((p, i) => (\r\n                <li key={i}>\r\n                  {p.name}: {p.share}€\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>Einmalige Schuld erfassen</h2>\r\n      <form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n\r\n          if (!oneCreditor || !oneDebtor || !oneAmount || !oneDate) {\r\n            alert(\"Bitte alle Felder ausfüllen.\");\r\n            return;\r\n          }\r\n\r\n          await fetch(\"/api/debts\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              creditor: oneCreditor,\r\n              debtor: oneDebtor,\r\n              amount: parseFloat(oneAmount),\r\n              description: oneDescription,\r\n              date: oneDate,\r\n            }),\r\n          });\r\n\r\n          alert(\"Schuld gespeichert!\");\r\n\r\n          // Zurücksetzen\r\n          setOneCreditor(\"\");\r\n          setOneDebtor(\"\");\r\n          setOneAmount(\"\");\r\n          setOneDescription(\"\");\r\n          setOneDate(\"\");\r\n        }}\r\n      >\r\n        <div>\r\n          <label>Gläubiger:</label>\r\n          <select\r\n            value={oneCreditor}\r\n            onChange={(e) => setOneCreditor(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">-- auswählen --</option>\r\n            {availableParticipants.map((p) => (\r\n              <option key={p._id} value={p.name}>\r\n                {p.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Schuldner:</label>\r\n          <select\r\n            value={oneDebtor}\r\n            onChange={(e) => setOneDebtor(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">-- auswählen --</option>\r\n            {availableParticipants.map((p) => (\r\n              <option key={p._id} value={p.name}>\r\n                {p.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Betrag:</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            value={oneAmount}\r\n            onChange={(e) => setOneAmount(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Beschreibung:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={oneDescription}\r\n            onChange={(e) => setOneDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Datum:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={oneDate}\r\n            onChange={(e) => setOneDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">➕ Einmalige Schuld erfassen</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subscriptions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}