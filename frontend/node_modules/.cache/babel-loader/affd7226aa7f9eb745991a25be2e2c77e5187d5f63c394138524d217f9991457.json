{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jascha\\\\Documents\\\\VS Code\\\\Schulden-Manager\\\\frontend\\\\src\\\\pages\\\\Subscriptions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subscriptions() {\n  _s();\n  const currentUser = \"Jascha\";\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [availableParticipants, setAvailableParticipants] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [participants, setParticipants] = useState([]);\n\n  // Daten laden: Abos + Teilnehmer\n  useEffect(() => {\n    const fetchData = async () => {\n      const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\n      const subs = await resSubs.json();\n      setSubscriptions(subs);\n      const resParts = await fetch(`/api/participants?user=${currentUser}`);\n      const parts = await resParts.json();\n      setAvailableParticipants(parts);\n    };\n    fetchData();\n  }, []);\n\n  // Teilnehmer hinzufügen\n  const handleAddParticipant = () => {\n    const usedNames = participants.map(p => p.name);\n    const unused = availableParticipants.find(p => !usedNames.includes(p.name));\n    if (!unused) return;\n    setParticipants([...participants, {\n      name: unused.name,\n      share: 0,\n      isCustom: false\n    }]);\n  };\n\n  // Teilnehmer löschen\n  const handleRemoveParticipant = index => {\n    const updated = [...participants];\n    updated.splice(index, 1);\n    setParticipants(updated);\n  };\n\n  // Teilnehmerfelder ändern\n  const handleParticipantChange = (index, field, value) => {\n    const updated = [...participants];\n    updated[index][field] = value;\n    if (field === \"share\") updated[index].isCustom = true;\n    setParticipants(updated);\n  };\n\n  // Anteil zurücksetzen (z. B. per Doppelklick)\n  const resetShare = index => {\n    const updated = [...participants];\n    updated[index].isCustom = false;\n    updated[index].share = 0;\n    setParticipants(updated);\n  };\n\n  // Dynamische Anteilverteilung\n  useEffect(() => {\n    const total = parseFloat(amount);\n    if (!total || participants.length === 0) return;\n    const fixed = participants.filter(p => p.isCustom);\n    const dynamic = participants.filter(p => !p.isCustom);\n    const fixedSum = fixed.reduce((sum, p) => sum + parseFloat(p.share || 0), 0);\n    const remaining = total - fixedSum;\n    const perPerson = dynamic.length > 0 ? remaining / dynamic.length : 0;\n\n    // Vermeide Endlosschleifen: nur ändern, wenn sich Werte wirklich ändern\n    const updated = participants.map(p => {\n      if (p.isCustom) return p;\n      const newShare = perPerson.toFixed(2);\n      if (parseFloat(p.share).toFixed(2) !== newShare) {\n        return {\n          ...p,\n          share: newShare\n        };\n      }\n      return p;\n    });\n    setParticipants(updated);\n  }, [amount, JSON.stringify(participants)]);\n\n  // Abo absenden\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      name,\n      amount: parseFloat(amount),\n      startDate,\n      createdBy: currentUser,\n      participants: participants.map(p => ({\n        name: p.name,\n        share: parseFloat(p.share)\n      }))\n    };\n    await fetch(\"/api/subscriptions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n\n    // Reset + Neu laden\n    setName(\"\");\n    setAmount(\"\");\n    setStartDate(\"\");\n    setParticipants([]);\n    const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\n    const subs = await resSubs.json();\n    setSubscriptions(subs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Abo erstellen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Abo-Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Gesamtbetrag\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Teilnehmeranteile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), participants.map((p, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: p.name,\n          onChange: e => handleParticipantChange(index, \"name\", e.target.value),\n          children: availableParticipants.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.name,\n            disabled: participants.some((pp, i) => i !== index && pp.name === option.name),\n            children: option.name\n          }, option._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: p.share,\n          onChange: e => handleParticipantChange(index, \"share\", parseFloat(e.target.value)),\n          onDoubleClick: () => resetShare(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleRemoveParticipant(index),\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddParticipant,\n        children: \"\\u2795 Teilnehmer hinzuf\\xFCgen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u2705 Abo speichern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Meine Abos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subscriptions.map(sub => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sub.name, \" \\u2013 \", sub.amount, \"\\u20AC \\u2013 Start:\", \" \", new Date(sub.startDate).toLocaleDateString(\"de-CH\"), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sub.participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.name, \": \", p.share, \"\\u20AC\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, sub._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(Subscriptions, \"lpi/LRqTM0g6E7Ldbg5gsk43RqM=\");\n_c = Subscriptions;\nexport default Subscriptions;\nvar _c;\n$RefreshReg$(_c, \"Subscriptions\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Subscriptions","_s","currentUser","subscriptions","setSubscriptions","availableParticipants","setAvailableParticipants","name","setName","amount","setAmount","startDate","setStartDate","participants","setParticipants","fetchData","resSubs","fetch","subs","json","resParts","parts","handleAddParticipant","usedNames","map","p","unused","find","includes","share","isCustom","handleRemoveParticipant","index","updated","splice","handleParticipantChange","field","value","resetShare","total","parseFloat","length","fixed","filter","dynamic","fixedSum","reduce","sum","remaining","perPerson","newShare","toFixed","JSON","stringify","handleSubmit","e","preventDefault","payload","createdBy","method","headers","body","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","required","option","disabled","some","pp","i","_id","onDoubleClick","onClick","sub","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Jascha/Documents/VS Code/Schulden-Manager/frontend/src/pages/Subscriptions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Subscriptions() {\r\n  const currentUser = \"Jascha\";\r\n\r\n  const [subscriptions, setSubscriptions] = useState([]);\r\n  const [availableParticipants, setAvailableParticipants] = useState([]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  // Daten laden: Abos + Teilnehmer\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\r\n      const subs = await resSubs.json();\r\n      setSubscriptions(subs);\r\n\r\n      const resParts = await fetch(`/api/participants?user=${currentUser}`);\r\n      const parts = await resParts.json();\r\n      setAvailableParticipants(parts);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Teilnehmer hinzufügen\r\n  const handleAddParticipant = () => {\r\n    const usedNames = participants.map((p) => p.name);\r\n    const unused = availableParticipants.find(\r\n      (p) => !usedNames.includes(p.name)\r\n    );\r\n    if (!unused) return;\r\n    setParticipants([\r\n      ...participants,\r\n      { name: unused.name, share: 0, isCustom: false },\r\n    ]);\r\n  };\r\n\r\n  // Teilnehmer löschen\r\n  const handleRemoveParticipant = (index) => {\r\n    const updated = [...participants];\r\n    updated.splice(index, 1);\r\n    setParticipants(updated);\r\n  };\r\n\r\n  // Teilnehmerfelder ändern\r\n  const handleParticipantChange = (index, field, value) => {\r\n    const updated = [...participants];\r\n    updated[index][field] = value;\r\n    if (field === \"share\") updated[index].isCustom = true;\r\n    setParticipants(updated);\r\n  };\r\n\r\n  // Anteil zurücksetzen (z. B. per Doppelklick)\r\n  const resetShare = (index) => {\r\n    const updated = [...participants];\r\n    updated[index].isCustom = false;\r\n    updated[index].share = 0;\r\n    setParticipants(updated);\r\n  };\r\n\r\n  // Dynamische Anteilverteilung\r\n  useEffect(() => {\r\n    const total = parseFloat(amount);\r\n    if (!total || participants.length === 0) return;\r\n\r\n    const fixed = participants.filter((p) => p.isCustom);\r\n    const dynamic = participants.filter((p) => !p.isCustom);\r\n\r\n    const fixedSum = fixed.reduce(\r\n      (sum, p) => sum + parseFloat(p.share || 0),\r\n      0\r\n    );\r\n    const remaining = total - fixedSum;\r\n    const perPerson = dynamic.length > 0 ? remaining / dynamic.length : 0;\r\n\r\n    // Vermeide Endlosschleifen: nur ändern, wenn sich Werte wirklich ändern\r\n    const updated = participants.map((p) => {\r\n      if (p.isCustom) return p;\r\n      const newShare = perPerson.toFixed(2);\r\n      if (parseFloat(p.share).toFixed(2) !== newShare) {\r\n        return { ...p, share: newShare };\r\n      }\r\n      return p;\r\n    });\r\n\r\n    setParticipants(updated);\r\n  }, [amount, JSON.stringify(participants)]);\r\n\r\n  // Abo absenden\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      name,\r\n      amount: parseFloat(amount),\r\n      startDate,\r\n      createdBy: currentUser,\r\n      participants: participants.map((p) => ({\r\n        name: p.name,\r\n        share: parseFloat(p.share),\r\n      })),\r\n    };\r\n\r\n    await fetch(\"/api/subscriptions\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    // Reset + Neu laden\r\n    setName(\"\");\r\n    setAmount(\"\");\r\n    setStartDate(\"\");\r\n    setParticipants([]);\r\n    const resSubs = await fetch(`/api/subscriptions?user=${currentUser}`);\r\n    const subs = await resSubs.json();\r\n    setSubscriptions(subs);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Abo erstellen</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Abo-Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Gesamtbetrag\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <h4>Teilnehmeranteile</h4>\r\n        {participants.map((p, index) => (\r\n          <div key={index}>\r\n            <select\r\n              value={p.name}\r\n              onChange={(e) =>\r\n                handleParticipantChange(index, \"name\", e.target.value)\r\n              }\r\n            >\r\n              {availableParticipants.map((option) => (\r\n                <option\r\n                  key={option._id}\r\n                  value={option.name}\r\n                  disabled={participants.some(\r\n                    (pp, i) => i !== index && pp.name === option.name\r\n                  )}\r\n                >\r\n                  {option.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              type=\"number\"\r\n              value={p.share}\r\n              onChange={(e) =>\r\n                handleParticipantChange(\r\n                  index,\r\n                  \"share\",\r\n                  parseFloat(e.target.value)\r\n                )\r\n              }\r\n              onDoubleClick={() => resetShare(index)}\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleRemoveParticipant(index)}\r\n            >\r\n              🗑️\r\n            </button>\r\n          </div>\r\n        ))}\r\n\r\n        <button type=\"button\" onClick={handleAddParticipant}>\r\n          ➕ Teilnehmer hinzufügen\r\n        </button>\r\n\r\n        <button type=\"submit\">✅ Abo speichern</button>\r\n      </form>\r\n\r\n      <h3>Meine Abos</h3>\r\n      <ul>\r\n        {subscriptions.map((sub) => (\r\n          <li key={sub._id}>\r\n            {sub.name} – {sub.amount}€ – Start:{\" \"}\r\n            {new Date(sub.startDate).toLocaleDateString(\"de-CH\")}\r\n            <ul>\r\n              {sub.participants.map((p, i) => (\r\n                <li key={i}>\r\n                  {p.name}: {p.share}€\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subscriptions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}