{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jascha\\\\Documents\\\\VS Code\\\\Schulden-Manager\\\\frontend\\\\src\\\\pages\\\\PersonDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../styles/PersonDetails.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PersonDetails() {\n  _s();\n  const currentUser = \"Jascha\";\n  const {\n    name\n  } = useParams();\n  const navigate = useNavigate();\n  const [debts, setDebts] = useState([]);\n  const [paymentInputs, setPaymentInputs] = useState({});\n  const fetchDebts = useCallback(async () => {\n    const res = await fetch(`/api/debts?user=${currentUser}`);\n    const data = await res.json();\n    const filtered = data.filter(d => d.creditor === name && d.debtor === currentUser || d.debtor === name && d.creditor === currentUser);\n    setDebts(filtered);\n  }, [currentUser, name]);\n  useEffect(() => {\n    fetchDebts();\n  }, [fetchDebts]);\n  const handlePaymentChange = (id, value) => {\n    setPaymentInputs(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const handleAddPayment = async debt => {\n    const amount = parseFloat(paymentInputs[debt._id]);\n    if (!amount || amount <= 0) {\n      alert(\"Bitte einen gültigen Betrag eingeben\");\n      return;\n    }\n    await fetch(\"/api/payments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        debtId: debt._id,\n        amount,\n        date: new Date(),\n        paidBy: currentUser\n      })\n    });\n    setPaymentInputs(prev => ({\n      ...prev,\n      [debt._id]: \"\"\n    }));\n    fetchDebts();\n  };\n  const total = debts.reduce((sum, d) => {\n    const val = d.amount - (d.paidAmount || 0);\n    if (d.status === \"paid\") return sum;\n    return d.creditor === currentUser ? sum + val : sum - val;\n  }, 0);\n  const sortedDebts = [...debts.filter(d => d.status === \"open\").sort((a, b) => new Date(b.date) - new Date(a.date)), ...debts.filter(d => d.status === \"paid\").sort((a, b) => new Date(b.date) - new Date(a.date))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"person-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Details zu \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        children: \"\\u2190 Zur\\xFCck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Saldo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), \" \", total.toFixed(2), \" CHF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), debts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Keine Eintr\\xE4ge gefunden.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-section\",\n      children: sortedDebts.map(debt => {\n        const rest = (debt.amount - (debt.paidAmount || 0)).toFixed(2);\n        const isIncoming = debt.creditor === currentUser;\n        const arrow = isIncoming ? \"➜\" : \"⬅\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `person-row ${isIncoming ? \"incoming\" : \"outgoing\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `arrow-icon ${isIncoming ? \"arrow-in\" : \"arrow-out\"}`,\n              children: arrow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), isIncoming ? \"Du bekommst\" : \"Du schuldest\", \" \", debt.amount.toFixed(2), \" CHF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-description\",\n            children: [\"Beschreibung: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: debt.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), debt.status !== \"paid\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"person-open\",\n              children: [\"Noch offen: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [rest, \" CHF\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"person-payment-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                placeholder: \"Betrag\",\n                value: paymentInputs[debt._id] || \"\",\n                onChange: e => handlePaymentChange(debt._id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddPayment(debt),\n                children: \"Zahlung erfassen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"person-status-badge\",\n            children: \"bezahlt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), debt.payments && debt.payments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-payment-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Historie:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: debt.payments.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [new Date(p.date).toLocaleDateString(\"de-CH\"), \" \\u2013\", \" \", p.amount.toFixed(2), \" CHF\"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonDetails, \"SQhM0cZwEFCxbe+R9aPgXrXQxFA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PersonDetails;\nexport default PersonDetails;\nvar _c;\n$RefreshReg$(_c, \"PersonDetails\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PersonDetails","_s","currentUser","name","navigate","debts","setDebts","paymentInputs","setPaymentInputs","fetchDebts","res","fetch","data","json","filtered","filter","d","creditor","debtor","handlePaymentChange","id","value","prev","handleAddPayment","debt","amount","parseFloat","_id","alert","method","headers","body","JSON","stringify","debtId","date","Date","paidBy","total","reduce","sum","val","paidAmount","status","sortedDebts","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","length","map","rest","isIncoming","arrow","description","type","step","placeholder","onChange","e","target","payments","p","i","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Jascha/Documents/VS Code/Schulden-Manager/frontend/src/pages/PersonDetails.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/PersonDetails.css\";\r\n\r\nfunction PersonDetails() {\r\n  const currentUser = \"Jascha\";\r\n  const { name } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [debts, setDebts] = useState([]);\r\n  const [paymentInputs, setPaymentInputs] = useState({});\r\n\r\n  const fetchDebts = useCallback(async () => {\r\n    const res = await fetch(`/api/debts?user=${currentUser}`);\r\n    const data = await res.json();\r\n    const filtered = data.filter(\r\n      (d) =>\r\n        (d.creditor === name && d.debtor === currentUser) ||\r\n        (d.debtor === name && d.creditor === currentUser)\r\n    );\r\n    setDebts(filtered);\r\n  }, [currentUser, name]);\r\n\r\n  useEffect(() => {\r\n    fetchDebts();\r\n  }, [fetchDebts]);\r\n\r\n  const handlePaymentChange = (id, value) => {\r\n    setPaymentInputs((prev) => ({ ...prev, [id]: value }));\r\n  };\r\n\r\n  const handleAddPayment = async (debt) => {\r\n    const amount = parseFloat(paymentInputs[debt._id]);\r\n    if (!amount || amount <= 0) {\r\n      alert(\"Bitte einen gültigen Betrag eingeben\");\r\n      return;\r\n    }\r\n\r\n    await fetch(\"/api/payments\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        debtId: debt._id,\r\n        amount,\r\n        date: new Date(),\r\n        paidBy: currentUser,\r\n      }),\r\n    });\r\n\r\n    setPaymentInputs((prev) => ({ ...prev, [debt._id]: \"\" }));\r\n    fetchDebts();\r\n  };\r\n\r\n  const total = debts.reduce((sum, d) => {\r\n    const val = d.amount - (d.paidAmount || 0);\r\n    if (d.status === \"paid\") return sum;\r\n    return d.creditor === currentUser ? sum + val : sum - val;\r\n  }, 0);\r\n\r\n  const sortedDebts = [\r\n    ...debts\r\n      .filter((d) => d.status === \"open\")\r\n      .sort((a, b) => new Date(b.date) - new Date(a.date)),\r\n    ...debts\r\n      .filter((d) => d.status === \"paid\")\r\n      .sort((a, b) => new Date(b.date) - new Date(a.date)),\r\n  ];\r\n\r\n  return (\r\n    <div className=\"person-details-container\">\r\n      <div className=\"person-header\">\r\n        <h2>Details zu {name}</h2>\r\n        <button onClick={() => navigate(\"/\")}>← Zurück</button>\r\n      </div>\r\n\r\n      <p>\r\n        <strong>Saldo:</strong> {total.toFixed(2)} CHF\r\n      </p>\r\n\r\n      {debts.length === 0 && <p>Keine Einträge gefunden.</p>}\r\n\r\n      <div className=\"person-section\">\r\n        {sortedDebts.map((debt) => {\r\n          const rest = (debt.amount - (debt.paidAmount || 0)).toFixed(2);\r\n          const isIncoming = debt.creditor === currentUser;\r\n          const arrow = isIncoming ? \"➜\" : \"⬅\";\r\n\r\n          return (\r\n            <div\r\n              key={debt._id}\r\n              className={`person-row ${isIncoming ? \"incoming\" : \"outgoing\"}`}\r\n            >\r\n              <div className=\"person-label\">\r\n                <span\r\n                  className={`arrow-icon ${\r\n                    isIncoming ? \"arrow-in\" : \"arrow-out\"\r\n                  }`}\r\n                >\r\n                  {arrow}\r\n                </span>\r\n                {isIncoming ? \"Du bekommst\" : \"Du schuldest\"}{\" \"}\r\n                {debt.amount.toFixed(2)} CHF\r\n              </div>\r\n\r\n              <div className=\"person-description\">\r\n                Beschreibung: <strong>{debt.description}</strong>\r\n              </div>\r\n\r\n              {debt.status !== \"paid\" ? (\r\n                <>\r\n                  <div className=\"person-open\">\r\n                    Noch offen: <strong>{rest} CHF</strong>\r\n                  </div>\r\n                  <div className=\"person-payment-form\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      placeholder=\"Betrag\"\r\n                      value={paymentInputs[debt._id] || \"\"}\r\n                      onChange={(e) =>\r\n                        handlePaymentChange(debt._id, e.target.value)\r\n                      }\r\n                    />\r\n                    <button onClick={() => handleAddPayment(debt)}>\r\n                      Zahlung erfassen\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <span className=\"person-status-badge\">bezahlt</span>\r\n              )}\r\n\r\n              {debt.payments && debt.payments.length > 0 && (\r\n                <div className=\"person-payment-history\">\r\n                  <strong>Historie:</strong>\r\n                  <ul>\r\n                    {debt.payments.map((p, i) => (\r\n                      <li key={i}>\r\n                        {new Date(p.date).toLocaleDateString(\"de-CH\")} –{\" \"}\r\n                        {p.amount.toFixed(2)} CHF\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}