{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jascha\\\\Documents\\\\VS Code\\\\Schulden-Manager\\\\frontend\\\\src\\\\pages\\\\PersonDetails.js\",\n  _s = $RefreshSig$();\n// src/pages/PersonDetails.js\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PersonDetails() {\n  _s();\n  const currentUser = \"Jascha\";\n  const {\n    name\n  } = useParams();\n  const [debts, setDebts] = useState([]);\n  const [paymentInputs, setPaymentInputs] = useState({}); // für Beträge je Schuld\n\n  useEffect(() => {\n    fetchDebts();\n  }, [name]);\n  const fetchDebts = async () => {\n    const res = await fetch(`/api/debts?user=${currentUser}`);\n    const data = await res.json();\n    // Nur Einträge mit dieser Person\n    const filtered = data.filter(d => d.creditor === name && d.debtor === currentUser || d.debtor === name && d.creditor === currentUser);\n    setDebts(filtered);\n  };\n  const handlePaymentChange = (id, value) => {\n    setPaymentInputs(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const handleAddPayment = async debt => {\n    const amount = parseFloat(paymentInputs[debt._id]);\n    if (!amount || amount <= 0) {\n      alert(\"Bitte einen gültigen Betrag eingeben\");\n      return;\n    }\n\n    // API-Aufruf Zahlung erfassen\n    await fetch(\"/api/payments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        debtId: debt._id,\n        amount,\n        date: new Date(),\n        // jetzt\n        paidBy: currentUser\n      })\n    });\n    setPaymentInputs(prev => ({\n      ...prev,\n      [debt._id]: \"\"\n    }));\n    fetchDebts();\n  };\n  const getLabel = debt => {\n    if (debt.creditor === currentUser) {\n      return `Du bekommst`;\n    } else {\n      return `Du schuldest`;\n    }\n  };\n\n  // Saldo berechnen\n  const total = debts.reduce((sum, d) => {\n    const val = d.amount - (d.paidAmount || 0);\n    if (d.status === \"paid\") return sum; // Ignorieren\n    if (d.creditor === currentUser) return sum + val; // Du bekommst\n    else return sum - val; // Du schuldest\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details zu \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Saldo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), \" \", total.toFixed(2), \" CHF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), debts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Keine Eintr\\xE4ge gefunden.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: debts.map(debt => {\n        const rest = (debt.amount - (debt.paidAmount || 0)).toFixed(2);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [getLabel(debt), \" \", debt.amount.toFixed(2), \" CHF f\\xFCr\", \" \", debt.description, \" am\", \" \", new Date(debt.date).toLocaleDateString(\"de-CH\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), debt.status !== \"paid\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Noch offen: \", rest, \" CHF\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                placeholder: \"Betrag\",\n                value: paymentInputs[debt._id] || \"\",\n                onChange: e => handlePaymentChange(debt._id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddPayment(debt),\n                children: \"\\uD83D\\uDCB8 Zahlung erfassen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), debt.status === \"paid\" && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \\u2013 bezahlt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 42\n          }, this), debt.payments && debt.payments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Historie:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: debt.payments.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [new Date(p.date).toLocaleDateString(\"de-CH\"), \" \\u2013\", \" \", p.amount.toFixed(2), \" CHF\"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonDetails, \"Rqger/itec3aPjreUSfOcOBKlxk=\", false, function () {\n  return [useParams];\n});\n_c = PersonDetails;\nexport default PersonDetails;\nvar _c;\n$RefreshReg$(_c, \"PersonDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PersonDetails","_s","currentUser","name","debts","setDebts","paymentInputs","setPaymentInputs","fetchDebts","res","fetch","data","json","filtered","filter","d","creditor","debtor","handlePaymentChange","id","value","prev","handleAddPayment","debt","amount","parseFloat","_id","alert","method","headers","body","JSON","stringify","debtId","date","Date","paidBy","getLabel","total","reduce","sum","val","paidAmount","status","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","length","map","rest","description","toLocaleDateString","type","step","placeholder","onChange","e","target","onClick","payments","p","i","_c","$RefreshReg$"],"sources":["C:/Users/Jascha/Documents/VS Code/Schulden-Manager/frontend/src/pages/PersonDetails.js"],"sourcesContent":["// src/pages/PersonDetails.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction PersonDetails() {\r\n  const currentUser = \"Jascha\";\r\n  const { name } = useParams();\r\n  const [debts, setDebts] = useState([]);\r\n  const [paymentInputs, setPaymentInputs] = useState({}); // für Beträge je Schuld\r\n\r\n  useEffect(() => {\r\n    fetchDebts();\r\n  }, [name]);\r\n\r\n  const fetchDebts = async () => {\r\n    const res = await fetch(`/api/debts?user=${currentUser}`);\r\n    const data = await res.json();\r\n    // Nur Einträge mit dieser Person\r\n    const filtered = data.filter(\r\n      (d) =>\r\n        (d.creditor === name && d.debtor === currentUser) ||\r\n        (d.debtor === name && d.creditor === currentUser)\r\n    );\r\n    setDebts(filtered);\r\n  };\r\n\r\n  const handlePaymentChange = (id, value) => {\r\n    setPaymentInputs((prev) => ({ ...prev, [id]: value }));\r\n  };\r\n\r\n  const handleAddPayment = async (debt) => {\r\n    const amount = parseFloat(paymentInputs[debt._id]);\r\n    if (!amount || amount <= 0) {\r\n      alert(\"Bitte einen gültigen Betrag eingeben\");\r\n      return;\r\n    }\r\n\r\n    // API-Aufruf Zahlung erfassen\r\n    await fetch(\"/api/payments\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        debtId: debt._id,\r\n        amount,\r\n        date: new Date(), // jetzt\r\n        paidBy: currentUser,\r\n      }),\r\n    });\r\n\r\n    setPaymentInputs((prev) => ({ ...prev, [debt._id]: \"\" }));\r\n    fetchDebts();\r\n  };\r\n\r\n  const getLabel = (debt) => {\r\n    if (debt.creditor === currentUser) {\r\n      return `Du bekommst`;\r\n    } else {\r\n      return `Du schuldest`;\r\n    }\r\n  };\r\n\r\n  // Saldo berechnen\r\n  const total = debts.reduce((sum, d) => {\r\n    const val = d.amount - (d.paidAmount || 0);\r\n    if (d.status === \"paid\") return sum; // Ignorieren\r\n    if (d.creditor === currentUser) return sum + val; // Du bekommst\r\n    else return sum - val; // Du schuldest\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Details zu {name}</h2>\r\n      <p>\r\n        <strong>Saldo:</strong> {total.toFixed(2)} CHF\r\n      </p>\r\n      {debts.length === 0 && <p>Keine Einträge gefunden.</p>}\r\n      <ul>\r\n        {debts.map((debt) => {\r\n          const rest = (debt.amount - (debt.paidAmount || 0)).toFixed(2);\r\n          return (\r\n            <li key={debt._id}>\r\n              {getLabel(debt)} {debt.amount.toFixed(2)} CHF für{\" \"}\r\n              {debt.description} am{\" \"}\r\n              {new Date(debt.date).toLocaleDateString(\"de-CH\")}\r\n              <br />\r\n              {debt.status !== \"paid\" && (\r\n                <>\r\n                  Noch offen: {rest} CHF\r\n                  <div>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      placeholder=\"Betrag\"\r\n                      value={paymentInputs[debt._id] || \"\"}\r\n                      onChange={(e) =>\r\n                        handlePaymentChange(debt._id, e.target.value)\r\n                      }\r\n                    />\r\n                    <button onClick={() => handleAddPayment(debt)}>\r\n                      💸 Zahlung erfassen\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {debt.status === \"paid\" && <span> – bezahlt</span>}\r\n              {debt.payments && debt.payments.length > 0 && (\r\n                <div>\r\n                  <strong>Historie:</strong>\r\n                  <ul>\r\n                    {debt.payments.map((p, i) => (\r\n                      <li key={i}>\r\n                        {new Date(p.date).toLocaleDateString(\"de-CH\")} –{\" \"}\r\n                        {p.amount.toFixed(2)} CHF\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}